function [f, g, B, sol, fsol] = benchmark(n)
%This function automitize the processo of challing benchmarks. It receives
%the number of the test and returns the function value, gradiente, hessian
%and solution to test

switch(n)
    case 1
        %Rosenbrook
        a = 1;
        b = 100;
        f = @(x) (a-x(1))^2 + b*(x(2)-x(1)^2)^2; 
        g = @(x) [-2*(a - x(1))-4*b*x(1)*(x(2)-x(1)^2);
                  2*b*(x(2)-x(1)^2)];
        B = @(x) [2-4*b*x(2)+12*b*x(1)^2 -4*b*x(1);
                  -4*b*x(1)                2*b];       
        sol = [a a^2];
        fsol = 0;
    case 2
        %Ackley N2
        f = @(x) -200*exp(-0.2*sqrt(x(1)^2+x(2)^2));
        g = @(x) [(4*x(1).*exp(-(x(1).^2 + x(2).^2)^(1/2)/50))./(x(1).^2 + x(2).^2)^(1/2);
                  (4*x(2).*exp(-(x(1).^2 + x(2).^2)^(1/2)/50))./(x(1).^2 + x(2).^2)^(1/2)];
        B = @(x) [ (4*exp(-(x(1)^2 + x(2)^2)^(1/2)/50))/(x(1)^2 + x(2)^2)^(1/2) - (2*x(1)^2*exp(-(x(1)^2 + x(2)^2)^(1/2)/50))/(25*(x(1)^2 + x(2)^2)) - (4*x(1)^2*exp(-(x(1)^2 + x(2)^2)^(1/2)/50))/(x(1)^2 + x(2)^2)^(3/2),                                                    - (2*x(1)*x(2)*exp(-(x(1)^2 + x(2)^2)^(1/2)/50))/(25*(x(1)^2 + x(2)^2)) - (4*x(1)*x(2)*exp(-(x(1)^2 + x(2)^2)^(1/2)/50))/(x(1)^2 + x(2)^2)^(3/2);
                                                            - (2*x(1)*x(2)*exp(-(x(1)^2 + x(2)^2)^(1/2)/50))/(25*(x(1)^2 + x(2)^2)) - (4*x(1)*x(2)*exp(-(x(1)^2 + x(2)^2)^(1/2)/50))/(x(1)^2 + x(2)^2)^(3/2), (4*exp(-(x(1)^2 + x(2)^2)^(1/2)/50))/(x(1)^2 + x(2)^2)^(1/2) - (2*x(2)^2*exp(-(x(1)^2 + x(2)^2)^(1/2)/50))/(25*(x(1)^2 + x(2)^2)) - (4*x(2)^2*exp(-(x(1)^2 + x(2)^2)^(1/2)/50))/(x(1)^2 + x(2)^2)^(3/2)] ;
        sol = [0 0];
        fsol = -200;
    case 3
        %Booth
        f = @(x) (x(1)+2*x(2)-7)^2+(2*x(1)+x(2)-5)^2;
        g = @(x) [10*x(1) + 8*x(2) - 34; 8*x(1) + 10*x(2) - 38];
        B = @(x) [10 8; 8 10];
        sol = [1; 3]
        fsol = 0;
    case 4
        %Boahchevsky
        f = @(x) x(1)^2+2*x(2)^2-0.3*cos(3*pi*x(1))-0.4*cos(4*pi*x(2))+0.7;
        g = @(x) [2*x(1) + (9*pi*sin(3*pi*x(1)))/10; x(2) + (8*pi*sin(4*pi*x(2)))/5];
        B = @(x) [ (27*pi^2*cos(3*pi*x(1)))/10+2 0; 0 (32*pi^2*cos(4*pi*x(2)))/5+4];
        sol = [0 0];
        fsol = 0;
    case 5
        %Matyas
        f = @(x) 0.26*(x(1)^2+x(2)^2)-0.48*x(1)*x(2);
        g = @(x) [(13*x(1))/25-(12*x(2))/25; (13*x(2))/25-(12*x(1))/25];
        B = @(x) [  13/25  -12/25; -12/25 13/25];
        sol = [0 0];
        fsol = 0;
    case 6
        %schwefel 2.23
        f = @(x) sum(x.^10);
        g = @(x) [10*x(1)^9; 10*x(2)^9];
        B = @(x) [90*x(1)^8 0; 0 90*x(2)^8];
        sol = [0 0];
        fsol = 0;
    case 7
        %Zakharov
        f = @(x) sum(x.^2)+sum(0.5*(1:length(x))'.*x)^2+sum(0.5*(1:length(x))'.*x)^4;
        g = @(x) [(5*x(1))/2+x(2)+2*(x(1)/2+x(2))^3; x(1)+4*x(2)+4*(x(1)/2+x(2))^3];
        B = @(x) [ 3*(x(1)/2+x(2))^2+5/2,  6*(x(1)/2+x(2))^2+1; 6*(x(1)/2+x(2))^2+1, 12*(x(1)/2+x(2))^2+4];
        sol = [0 0];
        fsol = 0;
    case 8
        %Beale
        f = @(x) (1.5-x(1)+x(1)*x(2))^2+(2.25-x(1)+x(1)*x(2)^2)^2+...
            (2.625-x(1)+x(1)*x(2)^3)^2;
        g = @(x) [2*(x(2)^2 - 1)*(x(1)*x(2)^2 - x(1) + 9/4) + 2*(x(2)^3 - 1)*(x(1)*x(2)^3 - x(1) + 21/8) + 2*(x(2) - 1)*(x(1)*x(2) - x(1) + 3/2); 2*x(1)*(x(1)*x(2) - x(1) + 3/2) + 4*x(1)*x(2)*(x(1)*x(2)^2 - x(1) + 9/4) + 6*x(1)*x(2)^2*(x(1)*x(2)^3-x(1)+21/8)];
        B = @(x) [2*(x(2)-1)^2+2*(x(2)^2-1)^2+2*(x(2)^3-1)^2,6*x(2)^2*(x(1)*x(2)^3-x(1)+21/8)-2*x(1)+2*x(1)*x(2)+2*x(1)*(x(2)-1)+4*x(2)*(x(1)*x(2)^2-x(1)+9/4)+4*x(1)*x(2)*(x(2)^2-1)+6*x(1)*x(2)^2*(x(2)^3-1)+3;6*x(2)^2*(x(1)*x(2)^3-x(1)+21/8)-2*x(1)+2*x(1)*x(2)+2*x(1)*(x(2)-1)+4*x(2)*(x(1)*x(2)^2-x(1)+9/4)+4*x(1)*x(2)*(x(2)^2-1)+6*x(1)*x(2)^2*(x(2)^3-1)+3,8*x(1)^2*x(2)^2+18*x(1)^2*x(2)^4+4*x(1)*(x(1)*x(2)^2-x(1)+9/4)+2*x(1)^2+12*x(1)*x(2)*(x(1)*x(2)^3-x(1)+21/8)];
        sol = [3 0.5];
        fsol = 0;
    case 9
        %Three-hump camel
        f = @(x) 2*x(1)^2-1.05*x(1)^4+x(1)^6/6+x(1)*x(2)+x(2)^2;
        g = @(x) [x(1)^5 - (21*x(1)^3)/5+4*x(1)+x(2); x(1)+2*x(2)];
        B = @(x) [ 5*x(1)^4-(63*x(1)^2)/5+4, 1; 1, 2] ;
        sol = [0 0];
        fsol = 0;
    case 10
       %Easom
        f = @(x) -cos(x(1))*cos(x(2))*exp(-( (x(1)-pi)^2 + (x(1)-pi)^2 ));
        g = @(x) [x(1)^5 - (21*x(1)^3)/5+4*x(1)+x(2); x(1)+2*x(2)];
        B = @(x) [ 5*x(1)^4-(63*x(1)^2)/5+4, 1; 1, 2] ;
        sol = [pi pi];
        fsol = -1;
end
        
end

%Non convex
% %Rastrigin
%         f = @(x) 10*length(x) + sum(x.^2-10*cos(2*pi*x));
%         g = @(x) [ 2*x(1)+20*pi*sin(2*pi*x(1)); 2*x(2)+20*pi*sin(2*pi*x(2))];
%         B = @(x) [ 40*pi^2*cos(2*pi*x(1))+2, 0; 0, 40*pi^2*cos(2*pi*x(2))+2];
%         sol = [0 0];

%Too hard to solve
% %Easom
%         f = @(x) -cos(x(1))*cos(x(2))*exp(-( (x(1)-pi)^2 + (x(1)-pi)^2 ));
%         g = @(x) [x(1)^5 - (21*x(1)^3)/5+4*x(1)+x(2); x(1)+2*x(2)];
%         B = @(x) [ 5*x(1)^4-(63*x(1)^2)/5+4, 1; 1, 2] ;
%         sol = [pi pi];